Перед Вами тестовый проект на писанный на языке Golang.  Он представляет собой crud и позволяет вести список пользователей. Вести список могут только администраторы прошедшие авторизацию и получившие jwt token.

Для оценки работы приложения, Вам понадобятся:
- Скачать и установить язык  Golang 1.15:   https://golang.org 
- Скачать и установить СУБД PostgreSQL 13:   https://www.postgresql.org/
- Скачать и установить платформу совместной работы для разработчиков API Postman:   https://www.postman.com.
- Скачать и установить IDE Sublime Text

Так же необходимы такие пакеты для языка Go:
"fmt"
"time"
"log"
 "os"
"database/sql"
"github.com/lib/pq"
"encoding/json"
"github.com/gorilla/mux"
"github.com/dgrijalva/jwt-go"
"net/http"
"strconv"
"database/sql"
"encoding/json"

Многие из этих пакетов не являются стандартными и для их установки Вам нужно будет набрать в консоли: go get <имя пакета>

Так же при разработке проекта были использованы: gofmt, goimports, govet.

В СУБД  PostgreSQL создайте базу данных “users” и добавьте в нее такие две таблицы:
- “users” ( “Id” int, “Name” text, “Age” text)
- “admin”(“Name”  text, “Password”  text)

Склонируйте репозиторий с проектом и откройте его в IDE, кот. поможет вам настроить и скомпилировать проект, проверить правильность и полноту установки пакетов.
Установить настройки нужно в файле settings/settings.cfg
Откройте консоль и перейдите в корневой каталог проекта. Наберите команду:  go build main.go, которая создаст файл: main.exe. Запустите его в консоли на выполнение. 
Если в процессе работы приложения будут возникать ошибки, то они будут записаны логером в файл logger/info.log
Запустите Postmen. Выберите ”Post” запрос. В адресной строке введите: localhost:8020/admin. Перейдите в заголовки запроса.  В колонке “Key”, создайте два заголовка: “Name” и “Password”. Напротив каждой созданной Вами записи, в колонке “value”, введите имя администратора и его пароль соответственно. В колонке “Key” создайте еще один заголовок “Content-type”, а напротив в колонке, в колонке “value”, введите: “application/json”. Нажмите кнопку “Send”. Теперь Вы зарегистрированы как администратор.

 Вы можете отредактировать свой пароль, или удалить запись отправив соответственно запросы “PUT” и “DELETE”, но для этого Вам понадобится  JWT token. Чтобы получить его, выберите запрос “GET” на адрес: localhost:8020/.Введите свое имя и пароль в заголовках, так как Вы это делали до этого и нажмите кнопку “Send”. В ответ Вы получите длинную строку символов – это и есть токен. Он действителен в течении 40 минут. Скопируйте строку токена. Создайте новый заголовок с названим Token, а в качестве значения  - вставьте строку токена. Теперь имя и пароль Вам не понадобятся до окончания срока действия токена и Вы можете создавать и редактировать записи пользователей.
 
Для создания пользователя, отправьте “POST” запрос с телом вида: {"Id":1",Name":"u","Age":2}  на адрес: localhost:8020/users. 
Для поиска одного пользователя по его id,  нужно отправить “GET” запрос на адрес: localhost:8020/users/1, где 1 – это  и есть Id который может быть любым числом, но уникальным.
Для редактирования пользователя, отправьте “PUT” запрос с телом вида: {"Id":1",Name":"u","Age":2}  на адрес: localhost:8020/users/{Id}. Id пользователя указывается без скобочек.
Для просмотра всех пользователей, отправьте “GET” запрос на адрес: localhost:8020/users.
Для удаления записи пользователя, отправьте “DELETE” запрос на адрес: localhost:8020/users/{Id}


 

